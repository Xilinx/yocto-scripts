#!/bin/bash

# Tweakables
images="petalinux-minimal petalinux-image"
date=$(date +%F)

# Helpers
function log     { echo "[$(date +'%F %T')] $@" | tee -a "$log_root/seed.$date"; }
function error() { log "$@" >&2; }
function die()   { error "$@"; exit 1; }

function bbenv() {
  env=$(mktemp)
  bitbake -e > $env &&
  for var in "$@"; do
    eval $(grep "^$var=" $env)
  done &&
  rm -f $env
}

[ -d "$BUILDDIR" ] || die "please source bitbake env"
bbenv DEPLOY_DIR BBMULTICONFIG TMPDIR BUILDDIR

function log_run() {
  out="$1"; shift
  log "RUN: $@"
  [ -n "$NOT_REALLY" ] || eval "$@ >> $out 2>&1"
}

function get_machines() {
  pattern="$1"; shift
  dirs="$source_dir/meta-xilinx $source_dir/meta-petalinux"
  for conf in $(find $dirs -path "$pattern"); do
    basename "$conf" ".conf"
  done
}

do_one_build() {
  local machine="$1";  shift
  local image="$1";    shift
  local build=$(echo $machine-$image | sed -e 's/:/-/g' -e 's:-multiconfig-:-:g')
  local image_dir="$image_root/$build-$date"
  local sdk="-c populate_sdk_ext"
  [[ "$machine" == *-generic ]] || sdk=""

  log "building $build $sdk ... "
  log_run $log_root/$build.$date \
    MACHINE="$machine" \
    bitbake $image $sdk "$@" -k
  log_run $log_root/$build.$date \
    upload-cache

  [ -d "$DEPLOY_DIR" ] || return

  mkdir -p $image_dir
  if [ -z "$sdk" ]; then
    log_run $log_root/$build.$date \
      rsync -av $DEPLOY_DIR/images/*/* $image_dir
  else
    log_run $log_root/$build.$date \
      rsync -av $DEPLOY_DIR/sdk/*/* $image_dir
  fi
  ln -sf $build-$date $image_root/$build
  rm -rf ${TMPDIR}
}

do_one_machine() {
  local machine="$1";  shift
  for image in $images; do
    do_one_build $machine "$image" "$@"
    for cfg in ${BBMULTICONFIG}; do
      do_one_build $machine "multiconfig:$cfg:$image" "$@"
      if [ "$cfg" = "multilib" ]; then
        do_one_build $machine "multiconfig:$cfg:lib32-$image" "$@"
      fi
    done
  done
}

do_all_machines() {
  machines=$(get_machines "*/conf/machine/*.conf" | sort)
  for machine in $machines; do
    do_one_machine "$machine" "$@"
  done
}

# ... and the rest...
self=$(readlink -f "$0")
scripts_dir=$(dirname "$self")
root_dir=$(dirname "$scripts_dir")
source_dir="$root_dir/sources/"
image_root="${BUILDDIR}/images"
log_root="${BUILDDIR}/seed-cache-logs"
mkdir -p $image_root $log_root

log "======================================================="
log "date         : $date"
log "root         : $root_dir"
log "source       : $source_dir"
log "sstate       : $sstate_dir"
log "downloads    : $downloads_dir"
log "images       : $image_root"
log "logs         : $log_root"
log "multiconfig  : $BBMULTICONFIG"
log ""

[ -n "$NO_SYNC" ] || (
  log "syncing repositories"
  log_run $log_root/seed.$date repo sync
)

do_all_machines "$@"

log "======================================================="

[ -z "FOREVER" ] || exec "$0" "$@"

# vim: expandtab:ts=2:sw=2:smartindent
